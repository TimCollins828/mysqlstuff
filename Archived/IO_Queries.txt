--SQL Server Dynamic Management Views (DMVs):
--IO SUBSYSTEM LATENCY BY DB
SELECT 
    --virtual file latency 
    [ReadLatency] = 
     CASE WHEN [num_of_reads] = 0 
THEN 0 ELSE ([io_stall_read_ms] / [num_of_reads]) END, 
    [WriteLatency] = 
     CASE WHEN [num_of_writes] = 0 
THEN 0 ELSE ([io_stall_write_ms] / [num_of_writes]) END, 
    [Latency] = 
    CASE WHEN ([num_of_reads] = 0 AND [num_of_writes] = 0) 
THEN 0 ELSE ([io_stall] / ([num_of_reads] + [num_of_writes])) END, 
    --avg bytes per IOP 
    [AvgBPerRead] = 
    CASE WHEN [num_of_reads] = 0 
  THEN 0 ELSE ([num_of_bytes_read] / [num_of_reads]) END, 
    [AvgBPerWrite] = 
    CASE WHEN [io_stall_write_ms] = 0 
THEN 0 ELSE ([num_of_bytes_written] / [num_of_writes]) END, 
[AvgBPerTransfer] = 
CASE WHEN ([num_of_reads] = 0 AND [num_of_writes] = 0) 
 THEN 0 ELSE 
                (([num_of_bytes_read] + [num_of_bytes_written]) / 
                ([num_of_reads] + [num_of_writes])) END, 
    LEFT ([mf].[physical_name], 2) AS [Drive], 
    DB_NAME ([vfs].[database_id]) AS [DB], 
    --[vfs].*,  
    [mf].[physical_name] 
FROM  sys.dm_io_virtual_file_stats (NULL,NULL) AS [vfs] 
JOIN sys.master_files AS [mf]  
    ON [vfs].[database_id] = [mf].[database_id]  
    AND [vfs].[file_id] = [mf].[file_id]  
-- WHERE [vfs].[file_id] = 2 -- log files  
-- ORDER BY [Latency] DESC  
-- ORDER BY [ReadLatency] DESC 
ORDER BY [WriteLatency] DESC; 
GO 

 

--The following DMVs will return extensive information that will help determine and diagnose 
--an IO problem as seen from within SQL Server:

--To check for outstanding IOPs from within SQL Server waiting longer than 10ms, start with:
select * 
from sys.dm_io_pending_io_requests 
where io_type = 'disk' and io_pending_ms_ticks > 10

--To get information on IO stalls (a wait for IO that can’t be completed immediately), 
--and the amount of traffic per file in a database, use:
select * 
from sys.dm_io_virtual_file_stats
(db_id(‘<ENTER YOUR DATABASE NAME HERE>’), NULL)

--To see if IO is the primary waiter for SQL Server, execute the following and 
--look for wait types with a naming convention like PAGEIOLATCH_%%:
 select top 10 * 
 from sys.dm_os_wait_stats 
 order by wait_time_ms desc

 --To monitor PAGEIOLATCHes for increases in time, periodically check and store these:
select * from sys.dm_os_wait_stats where wait_type like 'PAGEIOLATCH%'

--To capture current executing statements that are waiting on IO or just finished waiting on IO:
select 

      r.session_id,

      s.login_name,

      s.program_name,

      r.start_time,

      r.status,

      r.command,

      r.wait_type,

      r.wait_time,

      r.last_wait_type,

      r.logical_reads,

      (r.logical_reads * 8192) as 'KB Read',

      r.writes,

      (r.writes * 8192) as 'KB Written',

      t.[text]

from sys.dm_exec_requests r

      cross apply sys.dm_exec_sql_text(sql_handle) t

      inner join sys.dm_exec_sessions s

      on r.session_id = s.session_id

      where s.is_user_process = 1 and

      (r.wait_type like 'PAGEIOLATCH%' or r.last_wait_type like 
 'PAGEIOLATCH%') and

      r.session_id != @@SPID

 
